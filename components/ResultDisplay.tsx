import React, { useState } from 'react';
import FullScreenView from './FullScreenView';
import ExpandIcon from './icons/ExpandIcon';
import LockIcon from './icons/LockIcon';
import UnlockIcon from './icons/UnlockIcon';
import RegenerateIcon from './icons/RegenerateIcon';

interface ResultDisplayProps {
  mode: 'ai' | 'edit' | 'real';
  generatedImage: string | null;
  generatedText: string | null;
  isFaceLocked: boolean;
  onLockFaceToggle: () => void;
  onRegenerate: () => void;
}

const ResultDisplay: React.FC<ResultDisplayProps> = ({ mode, generatedImage, generatedText, isFaceLocked, onLockFaceToggle, onRegenerate }) => {
  const [isFullScreen, setIsFullScreen] = useState(false);

  const handleOpenFullScreen = () => {
    if (generatedImage) {
      setIsFullScreen(true);
    }
  };

  const handleCloseFullScreen = () => {
    setIsFullScreen(false);
  };

  return (
    <>
      <div className="mt-6 animate-fade-in">
          <h3 className="text-xl font-bold text-center mb-4 bg-gradient-to-r from-purple-400 to-indigo-400 text-transparent bg-clip-text">Your AI Generated Photo</h3>
          <div className="bg-gray-800/50 border border-gray-700 rounded-2xl p-4 shadow-xl">
          {generatedImage && (
              <div className="relative group w-full aspect-square bg-gray-900 rounded-lg overflow-hidden mb-4">
                  <img 
                      src={generatedImage} 
                      alt="Generated by AI" 
                      className="w-full h-full object-contain"
                  />
                  <button
                    onClick={handleOpenFullScreen}
                    className="absolute top-2 right-2 p-2 bg-black/50 rounded-full text-white opacity-0 group-hover:opacity-100 transition-opacity focus:opacity-100 outline-none focus:ring-2 focus:ring-brand-purple"
                    aria-label="View full screen"
                  >
                    <ExpandIcon className="w-5 h-5" />
                  </button>
              </div>
          )}
          {generatedText && (
              <div className="bg-gray-700/50 p-3 rounded-md">
                  <p className="text-sm text-gray-300 italic">
                      <span className="font-semibold not-italic">AI says:</span> "{generatedText}"
                  </p>
              </div>
          )}
          {generatedImage && (
            <>
              {mode === 'ai' && (
                <button
                  onClick={onLockFaceToggle}
                  className={`w-full flex items-center justify-center mt-4 py-2 px-4 font-semibold rounded-lg transition-colors duration-200 ${
                      isFaceLocked 
                      ? 'bg-green-800/50 border border-green-600 text-green-300 hover:bg-green-700/50' 
                      : 'bg-gray-700 hover:bg-gray-600 text-gray-200'
                  }`}
                >
                  {isFaceLocked ? (
                      <>
                          <LockIcon className="w-4 h-4 mr-2" />
                          Face Locked (Click to Unlock)
                      </>
                  ) : (
                      <>
                          <UnlockIcon className="w-4 h-4 mr-2" />
                          Lock Face & Keep Editing
                      </>
                  )}
                </button>
              )}
               <div className="mt-2 grid grid-cols-2 gap-2">
                    <button
                        onClick={onRegenerate}
                        className="w-full flex items-center justify-center py-2 px-4 bg-gray-600 text-white font-semibold rounded-lg hover:bg-gray-700 transition-colors"
                    >
                        <RegenerateIcon className="w-4 h-4 mr-2" />
                        Regenerate
                    </button>
                    <a
                        href={generatedImage}
                        download="ai-companion-photo.png"
                        className="w-full flex items-center justify-center py-2 px-4 bg-indigo-600 text-white font-semibold rounded-lg hover:bg-indigo-700 transition-colors"
                    >
                        Download Image
                    </a>
               </div>
            </>
          )}
          </div>
      </div>
      {isFullScreen && generatedImage && (
        <FullScreenView 
          imageUrl={generatedImage} 
          onClose={handleCloseFullScreen} 
        />
      )}
    </>
  );
};

export default ResultDisplay;